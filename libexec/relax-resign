#!/usr/bin/env bash -eu
# Summary: Resign ipa or xcarchive

usage () {
	cat <<-EOM
	Usage: ${ME} resign [-i <bundl-identifer>] -p <mobileprovision-name|path> -c <certificate-name> <ipa|xcarchive>

	Resign a product with a mobileprovision and a certificate
	This command doens't check consistencies between them.
	You can check valid mobileprovision and certificates with the below command.
	    ${ME} ls-profiles
	    ${ME} ls-certs
	
	EOM
	fin
}

# resign_app <certificate> <mobileprovision> <app-path>
resign_app () {
	if [ $# != 3 ]; then
		die "resign_app: bad argument "$@""
	fi

	local certificate="$1"
	local mobileprovision="$2"
	local app_path="$3"
	local entitlements=$REL_TEMP_DIR/entitlements

	if [[ ! -f "$mobileprovision" ]]; then
		local mobileprovision_name="$mobileprovision"
		mobileprovision="$(find_mobileprovision "$mobileprovision_name")"
		if [[ ! -f "$mobileprovision" ]]; then
			die "Not found $mobileprovision_name"
		fi
	fi
	
	/usr/bin/codesign -d --entitlements :- "$app_path" 2>/dev/null > $entitlements

	# Get the current TEAM ID
	local team=$(/usr/bin/codesign -dv "$app_path" 2>&1 | sed -ne "s/^TeamIdentifier=\(.*\)/\1/p")
	local identifier=$(/usr/bin/codesign -dv "$app_path" 2>&1 | sed -ne "s/^Identifier=\(.*\)/\1/p")

	# Get the resign TEAM ID from mobileprovision
	local temp_mobileprovision=$REL_TEMP_DIR/mobileprovision

	relax profile dec "$mobileprovision" -o "$temp_mobileprovision"

	local resign_team=$(/usr/libexec/PlistBuddy -c "Print :TeamIdentifier:0" $temp_mobileprovision)

	logi "TeamID: $team -> $resign_team"

	# Replace TEAMID in entitlements
	logi "$ARROW Generating entitlements"
	logv "--- Current entitilements ---"
	cat $entitlements | logv

	/usr/libexec/PlistBuddy -x -c "Print :Entitlements" $temp_mobileprovision > $entitlements

	logv "--- New Entitlements ---"
	cat $entitlements | logv
	
	if [[ ! -z $bundle_identifier ]]; then
		logi "$ARROW Updating Bundle Identifier($bundle_identifier)"
		local info_plist="$(find "$app_path" -name Info.plist -maxdepth 1)"
		local cmd="Set :CFBundleIdentifier $bundle_identifier"
		logi "$cmd in ${app_path##*/}/${info_plist##*/}"
		/usr/libexec/PlistBuddy -c "$cmd" "$info_plist"
	fi

	# Replace the embedded provisioning profile
	cp "$mobileprovision" "$app_path"/embedded.mobileprovision

	logi "$ARROW Resigning ${app_path##*/}"

	local stdtemp=$REL_TEMP_DIR/stdtemp

	exec 3> $stdtemp
	set +e

	while IFS= read -r bundle || [[ -n "$bundle" ]]
	do
		local keychain=$(security default-keychain | xargs)
		/usr/bin/codesign -fs "$certificate" --keychain ${keychain##*/} --no-strict --entitlements="$entitlements" "$bundle" 1>&3 2>&3
		if [[ $? != 0 ]]; then
			die "$(cat $stdtemp)"
		else
			cat $stdtemp | logv
		fi
	done < <(find -d "${app_path}/.." \
		\( -name "*.app" -o -name "*.appex" -o -name "*.framework" -o -name "*.dylib" \))

	set -e
	exec 3>&-
}

[[ $# != 0 ]] || usage


mobileprovision=
bundle_identifier=
certificate=
file_name=
app_path=

while [ $# -ne 0 ];
do
	arg=$1
	shift
	case $arg in
	-h) usage ;;
	-i)
		[[ $# != 0 ]] || usage
		bundle_identifier=$1
		shift
		;;
	-p)
		[[ $# != 0 ]] || usage
		mobileprovision=$1
		shift
		;;
	-c)
		[[ $# != 0 ]] || usage
		certificate=$1
		shift
		;;
	esac
done

target="${arg##*/}"
target_path="${arg}"
target_parent_path="${arg%/*}"
resign_root=$REL_TEMP_DIR/resign
resign_suffix="-resigned"

logi "$ARROW Resigning $target"

mkdir -p $resign_root

if [[ $target =~ (.*)\.xcarchive  ]]; then
	file_name="${BASH_REMATCH[1]}";

	logd "archive: $target"

	dest_path="$PWD/${file_name}"${resign_suffix}".xcarchive"

	if [[ -f $dest_path ]]; then
		die "Already existing $dest_path"
	fi

	cp -a "$arg" "$resign_root"

	app_path="$(find "$resign_root" -name *.app)";

	resign_app "$certificate" "$mobileprovision"  "$app_path"

	cp -a "$resign_root" "$dest_path"

elif [[ $target =~ (.*)\.ipa ]]; then
	file_name="${BASH_REMATCH[1]}";

	logd "ipa: $target"

	dest_path="$PWD/${file_name}"${resign_suffix}".ipa"

	if [[ -f $dest_path ]]; then
		die "Already existing $dest_path"
	fi

	unzip -q "$arg" -d "$resign_root"

	app_path="$(find "$resign_root" -name *.app)";

	resign_app "$certificate" "$mobileprovision"  "$app_path"

	# zip
	(
		cd "$resign_root"
		zip -rq "$dest_path" *
	)
else
	die "bad argument"
fi

logi "Resigned: $dest_path"
logi "${GREEN}Success${NC}"
